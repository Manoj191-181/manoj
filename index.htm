<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
  <title>CodeCraft Gaming</title>
  <link href="https://fonts.googleapis.com/css2?family=Orbitron:wght@400;500;700&display=swap" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
  <style>
    body {
      font-family: 'Orbitron', sans-serif;
      background-color: #0f0f0f;
      color: #ffffff;
      background-image: 
        radial-gradient(circle at 50% 50%, rgba(0, 255, 255, 0.1) 0%, transparent 50%),
        linear-gradient(to bottom, #0f0f0f, #1a1a2e);
    }
    .neon-border {
      box-shadow: 0 0 10px #0ff, 0 0 20px #0ff, 0 0 30px #0ff;
      animation: pulsate 2s infinite alternate;
    }
    .neon-text {
      text-shadow: 0 0 10px #0ff, 0 0 20px #0ff, 0 0 30px #0ff;
      animation: flicker 3s infinite alternate;
    }
    .btn-hover:hover {
      box-shadow: 0 0 15px #0ff;
      transform: scale(1.05);
      transition: all 0.3s ease;
    }
    @keyframes pulsate {
      0% { box-shadow: 0 0 10px #0ff, 0 0 20px #0ff, 0 0 30px #0ff; }
      100% { box-shadow: 0 0 15px #0ff, 0 0 25px #0ff, 0 0 35px #0ff; }
    }
    @keyframes flicker {
      0%, 19%, 21%, 23%, 25%, 54%, 56%, 100% { text-shadow: 0 0 10px #0ff, 0 0 20px #0ff, 0 0 30px #0ff; }
      20%, 24%, 55% { text-shadow: none; }
    }
    .hologram {
      position: relative;
      overflow: hidden;
    }
    .hologram::before {
      content: '';
      position: absolute;
      top: -50%;
      left: -50%;
      width: 200%;
      height: 200%;
      background: linear-gradient(
        to bottom right,
        rgba(0, 255, 255, 0.1) 0%,
        rgba(0, 255, 255, 0.05) 50%,
        transparent 100%
      );
      animation: hologram-effect 5s linear infinite;
    }
    @keyframes hologram-effect {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
    .cyber-grid {
      background-image: linear-gradient(rgba(0, 255, 255, 0.1) 1px, transparent 1px),
                        linear-gradient(90deg, rgba(0, 255, 255, 0.1) 1px, transparent 1px);
      background-size: 20px 20px;
      animation: cyber-grid-move 20s linear infinite;
    }
    @keyframes cyber-grid-move {
      0% { background-position: 0 0; }
      100% { background-position: 20px 20px; }
    }
    .data-stream {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      pointer-events: none;
      z-index: -1;
    }
    .data-particle {
      position: absolute;
      width: 2px;
      height: 2px;
      background-color: rgba(0, 255, 255, 0.5);
      animation: fall linear infinite;
    }
    @keyframes fall {
      0% { transform: translateY(-100vh); }
      100% { transform: translateY(100vh); }
    }

    /* Intro styles */
    #intro {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: #0f0f0f;
      display: flex;
      justify-content: center;
      align-items: center;
      z-index: 9999;
    }
    .loading-text {
      font-size: 2rem;
      color: #0ff;
      animation: pulse 1.5s infinite;
    }
    @keyframes pulse {
      0%, 100% { opacity: 1; }
      50% { opacity: 0.5; }
    }
    #main-content {
      display: none;
    }

    /* Responsive adjustments */
    @media (max-width: 768px) {
      .grid {
        grid-template-columns: 1fr;
      }
      
      nav ul {
        flex-direction: column;
        align-items: center;
      }
      
      nav ul li {
        margin-bottom: 10px;
      }
      
      .text-5xl {
        font-size: 2.5rem;
      }
      
      .text-2xl {
        font-size: 1.5rem;
      }
      
      .text-xl {
        font-size: 1.25rem;
      }
    }
  </style>
</head>
<body class="min-h-screen flex flex-col cyber-grid">
  <!-- Intro section -->
  <div id="intro">
    <div class="loading-text neon-text">Loading CodeCraft ...</div>
  </div>

  <!-- Main content wrapper -->
  <div id="main-content">
    <!-- Background music -->
    <audio loop id="backgroundMusic">
      <source src="audio.mp3" type="audio/mpeg">
      <source src="audio.ogg" type="audio/ogg">
      <source src="audio.wav" type="audio/wav">
    </audio>

    <!-- Music control button (moved to left side) -->
    <button id="musicToggle" class="fixed top-4 left-4 z-50 bg-gray-800 p-2 rounded-full">
      <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.536 8.464a5 5 0 010 7.072m2.828-9.9a9 9 0 010 12.728M5.586 15H4a1 1 0 01-1-1v-4a1 1 0 011-1h1.586l4.707-4.707C10.923 3.663 12 4.109 12 5v14c0 .891-1.077 1.337-1.707.707L5.586 15z" />
      </svg>
    </button>

    <div class="data-stream" id="dataStream"></div>

    <!-- Header section -->
    <header class="bg-gray-900 p-4">
      <nav class="container mx-auto flex flex-col md:flex-row justify-between items-center">
        <a href="index.htm" class="text-2xl font-bold neon-text mb-4 md:mb-0">CodeCraft</a>
        <ul class="flex flex-col md:flex-row space-y-4 md:space-y-0 md:space-x-6">
          <li><a href="index.htm" class="hover:text-cyan-400 transition">Home</a></li>
          <li><a href="aboutus.html" class="hover:text-cyan-400 transition">About</a></li>
          <li><a href="blog.html" class="text-cyan-400 transition">Blog</a></li>
          <li><a href="contact.html" class="hover:text-cyan-400 transition">Contact</a></li>
          <li><a href="login.html" class="bg-gradient-to-r from-green-400 to-blue-500 hover:from-pink-500 hover:to-yellow-500 px-4 py-2 rounded">Login</a></li>
        </ul>
      </nav>
    </header>

    <!-- Main content -->
    <main class="flex-grow container mx-auto px-4 py-8">
      <div class="text-center mb-12">
        <h1 class="text-5xl font-bold mb-4 neon-text">Welcome to CodeCraft</h1>
        <p class="text-xl">üñêDevelopment byüññ Manoj Dahal</p>
      </div>

      <div class="mb-12 text-center hologram">
        <img src="IMG.jpg" alt="CodeCraft Gaming" class="mx-auto rounded-lg shadow-lg neon-border" style="max-width: 100%; height: auto;">
      </div>

      <div class="grid md:grid-cols-2 gap-8">
        <div class="bg-gray-800 p-6 rounded-lg neon-border">
          <h2 class="text-2xl font-bold mb-4">Learn to Code</h2>
          <p class="mb-4">Master the art of programming with our interactive tutorials and challenges.</p>
          <a href="#" class="inline-block bg-cyan-600 hover:bg-cyan-700 px-6 py-3 rounded btn-hover transition">Start Learning</a>
        </div>

        <div class="bg-gray-800 p-6 rounded-lg neon-border">
          <h2 class="text-2xl font-bold mb-4">Join Tournaments</h2>
          <p class="mb-4">Compete with fellow coders in our exciting coding tournaments and win prizes!</p>
          <a href="1.html" class="inline-block bg-cyan-600 hover:bg-cyan-700 px-6 py-3 rounded btn-hover transition">View Tournaments</a>
        </div>
      </div>
    </main>

    <!-- Footer section -->
    <footer class="bg-gray-900 text-center p-4">
      <p>&copy; 2024 CodeCraft Gaming. All rights reserved.</p>
    </footer>

    <script>
      // Data stream effect
      const dataStream = document.getElementById('dataStream');
      const particleCount = 50;

      for (let i = 0; i < particleCount; i++) {
        createParticle();
      }

      function createParticle() {
        const particle = document.createElement('div');
        particle.classList.add('data-particle');
        particle.style.left = `${Math.random() * 100}%`;
        particle.style.animationDuration = `${Math.random() * 5 + 5}s`;
        dataStream.appendChild(particle);

        particle.addEventListener('animationiteration', () => {
          particle.style.left = `${Math.random() * 100}%`;
        });
      }

      // Audio script
      const audio = document.getElementById('backgroundMusic');
      const musicToggle = document.getElementById('musicToggle');
      const intro = document.getElementById('intro');
      const mainContent = document.getElementById('main-content');
      let isPlaying = false;

      // Auto-play function
      function autoPlayAudio() {
        audio.play().then(() => {
          isPlaying = true;
          musicToggle.classList.add('text-cyan-400');
        }).catch(error => {
          console.log("Auto-play prevented:", error);
        });
      }

      // Loading and auto-play
      window.addEventListener('load', () => {
        setTimeout(() => {
          intro.style.opacity = '0';
          intro.style.transition = 'opacity 0.5s ease-out';
          mainContent.style.display = 'block';
          setTimeout(() => {
            intro.style.display = 'none';
            autoPlayAudio();
          }, 500);
        }, 2000);
      });

      musicToggle.addEventListener('click', () => {
        if (isPlaying) {
          audio.pause();
          musicToggle.classList.remove('text-cyan-400');
        } else {
          audio.play();
          musicToggle.classList.add('text-cyan-400');
        }
        isPlaying = !isPlaying;
      });
    </script>
  </div>
</body>
</html>
